{
  "version": 3,
  "sources": ["../../../app/routes/feeds.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\feeds.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\feeds.$id.tsx\");\n}\n// REMIX HMR END\n\nimport { redirect } from \"@remix-run/node\";\nimport { useLoaderData, useNavigate } from \"@remix-run/react\";\nimport { getNextRecord, getPost, getPrevRecord } from \"~/models/post.server\";\nimport { Text } from \"~/components/ui/text\";\nimport { Heading } from \"~/components/ui/text\";\nimport { Icon } from \"~/components/ui/icon\";\nimport \"~/assets/style.css?__remix_sideEffect__\";\nimport { useEffect, useContext } from \"react\";\nimport layoutContext from \"~/lib/context\";\nimport { getUser } from \"~/models/session.server\";\nexport const loader = async ({\n  request\n}) => {\n  const url = new URL(request.url);\n  const postId = url.pathname.split(\"/\").slice(-1);\n  const post = await getPost(postId[0]);\n  const next = await getNextRecord(postId[0]);\n  const prev = await getPrevRecord(postId[0]);\n  const user = await getUser(request);\n  if (!user) return redirect(\"/\");\n  return {\n    userId: user.id,\n    post: post,\n    nextId: next?.id,\n    prevId: prev?.id\n  };\n};\nconst normalizeDate = pubDateString => {\n  const pubDate = new Date(pubDateString);\n  const date = pubDate.getDate();\n  const monthNumber = pubDate.getMonth();\n  const year = pubDate.getFullYear();\n  let month;\n  switch (monthNumber) {\n    case 0:\n      month = \"January\";\n      break;\n    case 1:\n      month = \"February\";\n      break;\n    case 2:\n      month = \"March\";\n      break;\n    case 3:\n      month = \"April\";\n      break;\n    case 4:\n      month = \"May\";\n      break;\n    case 5:\n      month = \"June\";\n      break;\n    case 6:\n      month = \"July\";\n      break;\n    case 7:\n      month = \"August\";\n      break;\n    case 8:\n      month = \"September\";\n      break;\n    case 9:\n      month = \"October\";\n      break;\n    case 10:\n      month = \"November\";\n      break;\n    default:\n      month = \"December\";\n      break;\n  }\n  return date + \". \" + month + \" \" + year;\n};\nconst FeedDetails = () => {\n  _s();\n  const loadData = useLoaderData();\n  const {\n    context,\n    setContext\n  } = useContext(layoutContext);\n  const pubDate = loadData ? normalizeDate(loadData.post.pubDate) : normalizeDate(new Date().toString());\n  const areSiblings = (node1, node2) => {\n    return node1.nextElementSibling === node2;\n  };\n\n  // Process the HTML content to satisfy the image display requirement\n  function processHtmlContent(htmlString) {\n    let parser = new DOMParser();\n    const doc = parser.parseFromString(htmlString, \"text/html\");\n    const images = Array.from(doc.querySelectorAll(\"img\"));\n    let imgContainer;\n    images.forEach((img, index) => {\n      const nextImg = images[index + 1];\n      if (nextImg && areSiblings(img, nextImg)) {\n        if (!imgContainer) {\n          imgContainer = doc.createElement(\"div\");\n          // Apply a class for styling of two images per row\n          imgContainer.className = \"w-full flex gap-[40px] justify-between flex-wrap\";\n          img.classList.add(\"aspect-square\", \"box-border\", \"shrink\", \"grow\");\n          img.parentNode?.insertBefore(imgContainer, img);\n        }\n        if (imgContainer != null) {\n          img.classList.add(\"aspect-square\", \"box-border\", \"shrink\", \"grow\");\n          imgContainer.appendChild(img);\n        }\n      } else {\n        imgContainer = null;\n        // Apply a class or inline style for full width if not already wrapped\n        img.classList.add(\"w-full\");\n      }\n    });\n    return doc.body.innerHTML;\n  }\n  const processedHTMLContent = loadData ? processHtmlContent(loadData.post.content) : \"\";\n  let navigate = useNavigate();\n  useEffect(() => {\n    setContext({\n      unread: context.unread,\n      userId: loadData.userId,\n      postId: loadData.post.id,\n      link: loadData.post.link\n    });\n    function handleKeydown(event) {\n      if (event.key === \"Escape\") {\n        navigate(\"/feeds/list\");\n      }\n      if (event.key === \"ArrowRight\" && loadData.nextId) {\n        navigate(`/feeds/${loadData.nextId}`);\n      }\n      if (event.key === \"ArrowLeft\" && loadData.prevId) {\n        navigate(`/feeds/${loadData.prevId}`);\n      }\n    }\n    window.addEventListener(\"keydown\", handleKeydown);\n    return () => window.removeEventListener(\"keydown\", handleKeydown);\n  }, [navigate, loadData.nextId, loadData.prevId]);\n  return <div className=\"w-[560px] flex flex-col gap-[40px] mx-auto py-[180px] pb-[80px] animate-fade-in\">\r\n      <div className=\"flex flex-col gap-[10px] animate-fade-in\">\r\n        <div className=\"flex flex-col\">\r\n          <Text className=\"text-[#272727] mb-[6px]\">\r\n            {loadData?.post.author}\r\n          </Text>\r\n          <Heading>{loadData?.post.title}</Heading>\r\n        </div>\r\n        <Text className=\"text-[#c0c0c0]\">{pubDate}</Text>\r\n      </div>\r\n      <div className=\"flex flex-col gap-[40px] w-full flex-1\" dangerouslySetInnerHTML={{\n      __html: processedHTMLContent\n    }}>\n      </div>\r\n      <div className=\"mt-[40px] flex px-[12px] py-[8px] gap-[9px] justify-center opacity-30 \">\r\n        <Text className=\"text-[14px] text-[#272727]\">\r\n          Use arrow keys to go to previous/next\r\n        </Text>\r\n        <span className=\"w-[20px] h-[20px] min-w-[20px] min-h-[20px] flex justify-center items-center rounded-[4px] border-[#272727] bg-[#f1f1f1] border\">\r\n          <Icon iconName=\"arrowLeft\" color=\"#272727\" className=\"w-[14px]\" />\r\n        </span>\r\n        <span className=\"w-[20px] h-[20px] min-w-[20px] min-h-[20px] flex justify-center items-center rounded-[4px] border-[#272727] bg-[#f1f1f1] border\">\r\n          <Icon iconName=\"arrowRight\" color=\"#272727\" className=\"w-[14px]\" />\r\n        </span>\r\n      </div>\r\n    </div>;\n};\n_s(FeedDetails, \"Ym/07uQtV2FdZPv9tB+A2mIjWU0=\", false, function () {\n  return [useLoaderData, useNavigate];\n});\n_c = FeedDetails;\nexport default FeedDetails;\nvar _c;\n$RefreshReg$(_c, \"FeedDetails\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}

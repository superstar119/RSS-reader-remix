generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_PRISMA_URL")
}

model User {
  id                String @id @default(cuid()) 
  email             String @unique
  password          String
  feedSubscription  FeedSubscription[]
  read              Read[]

  @@index([id], map: "user_index")
}

model FeedSubscription {
  id        String @id @default(cuid())
  feedId    String  
  userId    String  
  order     Int     @unique
  feed      Feed    @relation(fields: [feedId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([userId, feedId, order])
  
  @@index([feedId, userId], map: "feedId_userId_index")
  @@index([feedId], map: "subscription_feedId_index")
  @@index([userId], map: "subscription_userId_index")
  @@index([id], map: "feedSubscription_index")
}

model Feed {
  id                String @id @default(cuid())
  url               String @unique
  title             String
  FeedPost          FeedPost[]
  feedSubscription  FeedSubscription[]

  @@index([id], map: "Feed_id_index")
}

model FeedPost {
  id      String   @id @default(cuid())
  title   String
  imgSrc  String
  pubDate String
  content String
  author  String
  link    String
  feedId  String
  feed    Feed     @relation(fields:[feedId], references: [id], onDelete: Cascade)
  read    Read[]

  @@index([id], map: "Post_id_index")
  @@index([feedId], map: "FeedPost_feedId_index")
}

model Read {
  id        String      @id   @default(cuid())
  userId    String
  postId    String
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      FeedPost    @relation(fields: [postId], references: [id], onDelete: Cascade)
    
  @@index([id], map: "Read_id_index")
  @@index([userId], map: "read_user_id_index")
  @@index([postId], map: "read_post_id_index")
}
